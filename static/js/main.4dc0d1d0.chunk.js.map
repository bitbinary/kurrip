{"version":3,"sources":["constants/queries.js","components/items/TodoItem.js","components/items/TodoItemsCard.js","pages/protected/Dashboard.js","assets/logo.png","assets/logotext.png","pages/public/Home.js","assets/loading.gif","components/shared/Loading.js","components/LoginButton.js","components/shared/NavBar.js","components/Profile.js","utils/ApolloClient.js","App.js","reportWebVitals.js","constants/configs.js","constants/themes.js","constants/colors.js","index.js"],"names":["GET_TODOS","gql","UPDATE_TODOS","TodoItem","todo","useState","todoData","setTodoData","useMutation","updateTodo","data","useEffect","update_todos_by_pk","Paper","elevation","p","m","item","xs","component","Grid","FormControlLabel","label","title","control","Checkbox","onChange","e","variables","id","is_completed","target","checked","Typography","description","TodoItemsCard","todos","container","spacing","Box","rowSpacing","map","Dashboard","useQuery","loading","error","message","square","sx","flexGrow","variant","Card","Home","display","width","flexDirection","justifyContent","md","lg","alignItems","src","logo","className","alt","logoText","Loading","LinearProgress","LoginButton","loginWithRedirect","useAuth0","Button","color","onClick","NavBar","isAuthenticated","React","anchorEl","setAnchorEl","logout","user","isLoading","AppBar","position","Toolbar","IconButton","size","aria-label","aria-controls","aria-haspopup","event","currentTarget","Avatar","name","picture","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","to","exact","returnTo","window","location","origin","Profile","email","httpLink","createHttpLink","uri","ApolloClientCreator","token","setToken","console","log","getAccessTokenSilently","withToken","setContext","_","headers","authorization","then","userToken","resetToken","onError","networkError","statusCode","cache","InMemoryCache","authFlowLink","concat","ApolloClient","link","ApolloLink","from","connectToDevTools","App","ApolloProvider","client","PublicRoute","path","PrivateRoute","ProtectedRoutes","children","rest","render","pathname","state","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HASURA_GRAPHQL_ENGINE_HOSTNAME","scheme","proto","protocol","callbackUrl","primary","secondary","info","warning","success","darkTheme","createTheme","palette","mode","main","components","MuiPaper","styleOverrides","root","ReactDOM","domain","process","clientId","redirectUri","audience","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.4dc0d1d0.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const GET_TODOS = gql`\r\n  query GetTodos {\r\n    todos {\r\n      id\r\n      title\r\n      user_id\r\n      is_completed\r\n      description\r\n    }\r\n  }\r\n`;\r\nexport const INSERT_TODOS = gql`\r\n  mutation InsertTodo($title: String!) {\r\n    insert_todos(objects: { title: $title }) {\r\n      returning {\r\n        id\r\n        title\r\n        is_completed\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const UPDATE_TODOS = gql`\r\n  fragment todosFragment on todos {\r\n    id\r\n    title\r\n    is_completed\r\n  }\r\n  mutation updateTodo($id: Int = 9, $is_completed: Boolean = true) {\r\n    update_todos_by_pk(\r\n      pk_columns: { id: $id }\r\n      _set: { is_completed: $is_completed }\r\n    ) {\r\n      ...todosFragment\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_TODOS } from '../../constants/queries';\r\nexport default function TodoItem({ todo }) {\r\n  const [todoData, setTodoData] = useState(todo);\r\n  const [updateTodo, { data }] = useMutation(UPDATE_TODOS);\r\n  useEffect(() => {\r\n    if (data) {\r\n      setTodoData(data.update_todos_by_pk);\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <Paper\r\n      key={todoData.id}\r\n      elevation={6}\r\n      p={1}\r\n      m={1}\r\n      item\r\n      xs={12}\r\n      component={Grid}\r\n    >\r\n      <FormControlLabel\r\n        label={todoData.title}\r\n        control={\r\n          <Checkbox\r\n            onChange={(e) =>\r\n              updateTodo({\r\n                variables: { id: todo.id, is_completed: e.target.checked },\r\n              })\r\n            }\r\n            checked={todoData.is_completed}\r\n          />\r\n        }\r\n      />\r\n      <Typography>{todoData.description}</Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Grid, Paper } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nexport default function TodoItemsCard({ todos }) {\r\n  return (\r\n    <Paper p={2} container spacing={2} component={Box}>\r\n      <Grid p={2} container spacing={2} rowSpacing={2}>\r\n        {todos.map((todo) => (\r\n          <TodoItem key={todo.id} todo={todo} />\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Paper, Box, Typography, Card } from '@mui/material';\r\nimport React from 'react';\r\nimport { GET_TODOS } from '../../constants/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport TodoItemsCard from '../../components/items/TodoItemsCard';\r\n// const GET_TODOS = gql`\r\n//   query GetTodos {\r\n//     todos {\r\n//       id\r\n//       title\r\n//       user_id\r\n//       is_completed\r\n//     }\r\n//   }\r\n// `;\r\n// const INSERT_TODOS = gql`\r\n//   mutation InsertTodo($title: String!) {\r\n//     insert_todos(objects: { title: $title }) {\r\n//       returning {\r\n//         id\r\n//         title\r\n//         is_completed\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default function Dashboard() {\r\n  const { loading, error, data } = useQuery(GET_TODOS);\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n  return (\r\n    // <Box p={2} sx={{ display: 'flex', flexGrow: '1' }}>\r\n    <Paper square component={Box} p={2} elevation={12} sx={{ flexGrow: '1' }}>\r\n      <Typography variant=\"h4\" component=\"div\">\r\n        Todos\r\n      </Typography>\r\n      <Paper component={Card}>\r\n        <TodoItemsCard todos={data.todos} />\r\n      </Paper>\r\n    </Paper>\r\n    // </Box>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.71f8d5e8.png\";","export default __webpack_public_path__ + \"static/media/logotext.cca537cc.png\";","import React from 'react';\r\nimport logo from '../../assets/logo.png';\r\nimport logoText from '../../assets/logotext.png';\r\nimport { Box, Grid, Paper } from '@mui/material';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Box sx={{ display: 'flex', flexGrow: 1 }}>\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            lg={6}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            display=\"flex\"\r\n          >\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <img src={logoText} className=\"App-logo-text\" alt=\"logo\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.4576e801.gif\";","import { Box, LinearProgress } from '@mui/material';\r\nimport React from 'react';\r\nimport loading from '../../assets/loading.gif';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <img src={loading} className=\"App-logo\" alt=\"logo\" />\r\n        <Box sx={{ width: '100px' }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Button } from '@mui/material';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Avatar } from '@mui/material';\r\nimport LoginButton from '../LoginButton';\r\nimport { NavLink as RouterNavLink } from 'react-router-dom';\r\n\r\nexport default function NavBar({ isAuthenticated }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const { logout, user, isLoading } = useAuth0();\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  if (isLoading) return null;\r\n  return (\r\n    <Box>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1 }}\r\n          ></Typography>\r\n          {isAuthenticated ? (\r\n            <div>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <Avatar alt={user.name} src={user.picture} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem>\r\n                  <RouterNavLink to=\"/\" className=\"nav-link\" exact>\r\n                    Dashboard\r\n                  </RouterNavLink>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  <RouterNavLink to=\"/profile\" exact>\r\n                    Profile\r\n                  </RouterNavLink>\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={() => logout({ returnTo: window.location.origin })}\r\n                >\r\n                  LogOut\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n            <LoginButton />\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <img src={user.picture} alt={user.name} />\r\n        <h2>{user.name}</h2>\r\n        <p>{user.email}</p>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import {\r\n  ApolloClient,\r\n  ApolloLink,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { onError } from '@apollo/client/link/error';\r\nimport { useState } from 'react';\r\nconst httpLink = new createHttpLink({\r\n  uri: 'https://kurrip.hasura.app/v1/graphql',\r\n});\r\n\r\nexport const ApolloClientCreator = () => {\r\n  const [token, setToken] = useState(null);\r\n  console.log(token);\r\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0();\r\n\r\n  const withToken = setContext((_, { headers }) => {\r\n    // if you have a cached value, return it immediately\r\n    if (isAuthenticated) {\r\n      if (token)\r\n        return {\r\n          // Return the new header with Token\r\n          headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n          },\r\n        };\r\n      else {\r\n        return getAccessTokenSilently().then((userToken) => {\r\n          setToken(userToken);\r\n          return {\r\n            // Return the new header with Token\r\n            headers: {\r\n              ...headers,\r\n              authorization: token ? `Bearer ${token}` : '',\r\n            },\r\n          };\r\n        });\r\n      }\r\n    }\r\n    // If there is no cached value, look up the authO token\r\n  });\r\n  // SetUp clear token for cases where the token is expired or is not authorized\r\n  const resetToken = onError(({ networkError }) => {\r\n    if (\r\n      networkError &&\r\n      networkError.name === 'ServerError' &&\r\n      networkError.statusCode === 401\r\n    ) {\r\n      // remove cached token on 401 from the server\r\n      setToken(null);\r\n    }\r\n  });\r\n  // Initialising the cache\r\n  const cache = new InMemoryCache();\r\n\r\n  const authFlowLink = withToken.concat(resetToken);\r\n  const client = new ApolloClient({\r\n    link: ApolloLink.from([authFlowLink, httpLink]),\r\n    cache,\r\n    connectToDevTools: true,\r\n  });\r\n  return client;\r\n};\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport './App.scss';\r\nimport Dashboard from './pages/protected/Dashboard';\r\nimport Home from './pages/public/Home';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Loading from './components/shared/Loading';\r\nimport NavBar from './components/shared/NavBar';\r\nimport Profile from './components/Profile';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { ApolloClientCreator } from './utils/ApolloClient';\r\n\r\nexport default function App() {\r\n  const { isAuthenticated } = useAuth0();\r\n  // getAccessTokenSilently().then((token) => {\r\n  //   setToken(token);\r\n  // });\r\n  // const apolloClient = useAppApolloClient(token);\r\n  return (\r\n    <ApolloProvider client={ApolloClientCreator()}>\r\n      <Router>\r\n        <NavBar isAuthenticated={isAuthenticated} />\r\n        <Switch>\r\n          <PublicRoute path=\"/login\">\r\n            <Home />\r\n          </PublicRoute>\r\n          <PrivateRoute path=\"/\">\r\n            <ProtectedRoutes />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nfunction PublicRoute({ children, ...rest }) {\r\n  const { isAuthenticated, isLoading } = useAuth0();\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const { isAuthenticated, isLoading } = useAuth0();\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction ProtectedRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Dashboard />\r\n      </Route>\r\n      {/*  <Route path=\"/users\">\r\n        <Users />\r\n      </Route>\r\n      <Route path=\"/forum\">\r\n        <Forum />\r\n      </Route>\r\n      <Route path=\"/feeds\">\r\n        <Forum activePage=\"feeds\" />\r\n      </Route>\r\n      <Route path=\"/search\">\r\n        <Forum activePage=\"search\" />\r\n      </Route>\r\n      <Route path=\"/recommendations\">\r\n        <Forum activePage=\"recommendations\" />\r\n      </Route>\r\n      <Route path=\"/messages\">\r\n        <Messages />\r\n      </Route> */}\r\n    </Switch>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const HASURA_GRAPHQL_ENGINE_HOSTNAME = 'kurrip.hasura.app';\r\n\r\nconst scheme = (proto) => {\r\n  return window.location.protocol === 'https:' ? `${proto}s` : proto;\r\n};\r\n\r\nexport const GRAPHQL_URL = `${scheme(\r\n  'http'\r\n)}://${HASURA_GRAPHQL_ENGINE_HOSTNAME}/v1/graphql`;\r\n\r\nexport const REALTIME_GRAPHQL_URL = `${scheme(\r\n  'ws'\r\n)}://${HASURA_GRAPHQL_ENGINE_HOSTNAME}/v1/graphql`;\r\n\r\nexport const authClientId = process.env.REACT_APP_AUTH_CLIENT_ID;\r\nexport const authDomain = process.env.REACT_APP_AUTH_DOMAIN;\r\nexport const callbackUrl = window.location.origin;\r\nexport const audience = process.env.REACT_APP_AUDIENCE;\r\n","import { createTheme } from '@mui/material';\r\nimport { colors } from './colors';\r\n// const colors = {\r\n//   lightShade: '#80BFAA',\r\n//   darkShade: '#287075',\r\n//   highlight: '#F7D854',\r\n//   shadow: '#1B4252',\r\n//   success: '#00D909',\r\n//   danger: '#FF3000',\r\n//   primary: '#0085FF',\r\n// };\r\nconst { primary, secondary, info, warning, success, error } = colors;\r\n\r\nexport const lightTheme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n  },\r\n});\r\nexport const darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: primary,\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n    },\r\n    info: {\r\n      main: info,\r\n    },\r\n    warning: {\r\n      main: warning,\r\n    },\r\n    success: {\r\n      main: success,\r\n    },\r\n    error: {\r\n      main: error,\r\n    },\r\n  },\r\n  components: {\r\n    MuiPaper: {\r\n      styleOverrides: {\r\n        // Name of the slot\r\n        root: {\r\n          // Some CSS\r\n          flexGrow: '1',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","export const colors = {\r\n   lightShade: '#80BFAA',\r\n   darkShade: '#287075',\r\n   info: '#F7D854',\r\n   warning: '#1B4252',\r\n   success: '#00D909',\r\n   error: '#FF3000',\r\n   primary: '#0085FF',\r\n   secondary: '#ffffff',\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport {\r\n  callbackUrl,\r\n  authClientId,\r\n  authDomain,\r\n  audience,\r\n} from './constants/configs';\r\nimport { ThemeProvider } from '@emotion/react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { lightTheme, darkTheme } from './constants/themes';\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={authDomain}\r\n    clientId={authClientId}\r\n    redirectUri={callbackUrl}\r\n    audience={audience}\r\n  >\r\n    <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </React.StrictMode>\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}