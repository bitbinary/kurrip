{"version":3,"sources":["pages/protected/Dashboard.js","assets/loading.gif","assets/logotext.png","components/LoginButton.js","pages/public/Home.js","components/shared/Loading.js","components/shared/NavBar.js","App.js","reportWebVitals.js","constants/configs.js","constants/themes.js","index.js"],"names":["Dashboard","LoginButton","loginWithPopup","useAuth0","Button","variant","onClick","Home","className","src","loading","alt","logotext","Loading","NavBar","isAuthenticated","React","anchorEl","setAnchorEl","logout","user","handleClose","isLoading","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","component","IconButton","size","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","Avatar","name","picture","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","returnTo","window","location","origin","AuthExample","path","PrivateRoute","children","rest","render","to","pathname","state","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HASURA_GRAPHQL_ENGINE_HOSTNAME","scheme","proto","protocol","authClientId","authDomain","callbackUrl","lightShade","darkShade","highlight","shadow","themes","createTheme","palette","main","primary","props","MuiButton","disableRipple","components","variants","style","backgroundColor","textTransform","ReactDOM","domain","clientId","redirectUri","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.f628ae7d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Dashboard() {\r\n   return <div>Dashboard</div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.4576e801.gif\";","export default __webpack_public_path__ + \"static/media/logotext.cca537cc.png\";","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Button } from '@mui/material';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithPopup } = useAuth0();\r\n\r\n  return (\r\n    <Button variant=\"dark\" onClick={() => loginWithPopup()}>\r\n      Log In\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from 'react';\r\nimport loading from '../../assets/loading.gif';\r\n// import logo from '../../assets/logo.png';\r\nimport logotext from '../../assets/logotext.png';\r\nimport LoginButton from '../../components/LoginButton';\r\nimport LogoutButton from '../../components/LogoutButton';\r\nimport Profile from '../../components/Profile';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <img src={loading} className=\"App-logo\" alt=\"logo\" />\r\n        <img src={logotext} className=\"App-logo-text\" alt=\"logo\" />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport loading from '../../assets/loading.gif';\r\n\r\nexport default function Loading() {\r\n   return (\r\n      <div>\r\n         <header className='App-header'>\r\n            <img src={loading} className='App-logo' alt='logo' />\r\n         </header>\r\n      </div>\r\n   );\r\n}\r\n","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Avatar } from '@mui/material';\r\nimport LoginButton from '../LoginButton';\r\n\r\nexport default function NavBar({ isAuthenticated }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const { logout, user, isLoading } = useAuth0();\r\n  const handleChange = (event) => {};\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  if (isLoading) return null;\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1 }}\r\n          ></Typography>\r\n          {isAuthenticated ? (\r\n            <div>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <Avatar alt={user.name} src={user.picture} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem\r\n                  onClick={() => logout({ returnTo: window.location.origin })}\r\n                >\r\n                  LogOut\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n            <LoginButton />\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport './App.scss';\r\nimport Dashboard from './pages/protected/Dashboard';\r\nimport Home from './pages/public/Home';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Loading from './components/shared/Loading';\r\nimport NavBar from './components/shared/NavBar';\r\n// This example has 3 pages: a public page, a protected\r\n// page, and a login screen. In order to see the protected\r\n// page, you must first login. Pretty standard stuff.\r\n//\r\n// First, visit the public page. Then, visit the protected\r\n// page. You're not yet logged in, so you are redirected\r\n// to the login page. After you login, you are redirected\r\n// back to the protected page.\r\n//\r\n// Notice the URL change each time. If you click the back\r\n// button at this point, would you expect to go back to the\r\n// login page? No! You're already logged in. Try it out,\r\n// and you'll see you go back to the page you visited\r\n// just *before* logging in, the public page.\r\n\r\nexport default function AuthExample() {\r\n  const { isAuthenticated } = useAuth0();\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <NavBar isAuthenticated={isAuthenticated} />\r\n        <Switch>\r\n          <Route path=\"/public\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Home />\r\n          </Route>\r\n          <PrivateRoute path=\"/\">\r\n            <Dashboard />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const { isAuthenticated, isLoading } = useAuth0();\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const HASURA_GRAPHQL_ENGINE_HOSTNAME = 'kurrip.hasura.app';\r\n\r\nconst scheme = (proto) => {\r\n  return window.location.protocol === 'https:' ? `${proto}s` : proto;\r\n};\r\n\r\nexport const GRAPHQL_URL = `${scheme(\r\n  'http'\r\n)}://${HASURA_GRAPHQL_ENGINE_HOSTNAME}/v1/graphql`;\r\n\r\nexport const REALTIME_GRAPHQL_URL = `${scheme(\r\n  'ws'\r\n)}://${HASURA_GRAPHQL_ENGINE_HOSTNAME}/v1/graphql`;\r\n\r\nexport const authClientId = '69bhm63TZadm6EjvMHwpuajeLbZPUkJx';\r\nexport const authDomain = 'kurrip.au.auth0.com';\r\nexport const callbackUrl = window.location.origin;\r\n\r\nexport function getConfig() {\r\n  // Configure the audience here. By default, it will take whatever is in the config\r\n  // (specified by the `audience` key) unless it's the default value of \"YOUR_API_IDENTIFIER\" (which\r\n  // is what you get sometimes by using the Auth0 sample download tool from the quickstart page, if you\r\n  // don't have an API).\r\n  // If this resolves to `null`, the API page changes to show some helpful info about what to do\r\n  // with the audience.\r\n  const audience =\r\n    audience && audience !== 'YOUR_API_IDENTIFIER' ? audience : null;\r\n\r\n  return {\r\n    domain: authDomain,\r\n    clientId: authClientId,\r\n    ...(audience ? { audience } : null),\r\n  };\r\n}\r\n","import { createTheme } from '@mui/material';\r\nconst colors = {\r\n  lightShade: '#80BFAA',\r\n  darkShade: '#287075',\r\n  highlight: '#F7D854',\r\n  shadow: '#1B4252',\r\n};\r\nconst { lightShade, darkShade, highlight, shadow } = colors;\r\nexport const themes = createTheme({\r\n  palette: {\r\n    lightShade: {\r\n      main: lightShade,\r\n    },\r\n    primary: {\r\n      main: darkShade,\r\n    },\r\n    shadow: {\r\n      main: shadow,\r\n    },\r\n    highlight: {\r\n      main: highlight,\r\n    },\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  components: {\r\n    MuiButton: {\r\n      variants: [\r\n        {\r\n          props: { variant: 'dark' },\r\n          style: {\r\n            backgroundColor: shadow,\r\n            color: '#F7D854',\r\n            textTransform: 'uppercase',\r\n            ':hover': {\r\n              backgroundColor: shadow,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport { callbackUrl, authClientId, authDomain } from './constants/configs';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { themes } from './constants/themes';\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={authDomain}\r\n    clientId={authClientId}\r\n    redirectUri={callbackUrl}\r\n  >\r\n    <React.StrictMode>\r\n      <ThemeProvider theme={themes}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </React.StrictMode>{' '}\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}