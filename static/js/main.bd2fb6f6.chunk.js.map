{"version":3,"sources":["assets/logo.png","assets/logotext.png","components/LoginButton.js","components/LogoutButton.js","components/Profile.js","constants/configs.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","returnTo","window","location","origin","Profile","user","isLoading","src","picture","alt","name","HASURA_GRAPHQL_ENGINE_HOSTNAME","scheme","proto","protocol","callbackUrl","App","isAuthenticated","className","logo","logotext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","document","getElementById"],"mappings":"sLAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,qC,sBCS1BA,EANK,WAAO,IACjBC,EAAsBC,cAAtBD,kBAER,OAAO,wBAAQE,QAAS,kBAAMF,KAAvB,qBCOMG,EAVM,WAAO,IAClBC,EAAWH,cAAXG,OAER,OACE,wBAAQF,QAAS,kBAAME,EAAO,CAAEC,SAAUC,OAAOC,SAASC,UAA1D,sBCQWC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KACjB,OADuC,EAAhBC,UAEd,8CAIP,gCACE,qBAAKC,IAAKF,EAAKG,QAASC,IAAKJ,EAAKK,OAClC,0CAAaL,EAAKK,YCVlBC,EAAiC,oBAEjCC,EAAS,SAACC,GACd,MAAoC,WAA7BZ,OAAOC,SAASY,SAAhB,UAA2CD,EAA3C,KAAsDA,GAalDE,GAVW,UAAMH,EAC5B,QADsB,cAEjBD,EAFiB,eAIS,UAAMC,EACrC,MAD+B,cAE1BD,EAF0B,eAMNV,OAAOC,SAASC,QCU5Ba,MAhBf,WAAgB,IAAD,EACgCpB,cAArCS,EADK,EACLA,KAAMY,EADD,EACCA,gBAAiBX,EADlB,EACkBA,UAE/B,OACE,qBAAKY,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKX,IAAKY,EAAMD,UAAU,WAAWT,IAAI,SACzC,qBAAKF,IAAKa,EAAUF,UAAU,gBAAgBT,IAAI,UAChDQ,GAAmB,cAAC,EAAD,IACpBA,GAAmB,cAAC,EAAD,IACnBA,GAAmB,cAAC,EAAD,CAASZ,KAAMA,EAAMC,UAAWA,UCR7Ce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,eAAC,IAAD,CACEC,OHKsB,sBGJtBC,SHGwB,mCGFxBC,YAAanB,EAHf,UAKE,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MACkB,OAEtBC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.bd2fb6f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.71f8d5e8.png\";","export default __webpack_public_path__ + \"static/media/logotext.cca537cc.png\";","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button onClick={() => loginWithRedirect()}>Log In</button>;\r\n};\r\n\r\nexport default LoginButton;\r\n","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <button onClick={() => logout({ returnTo: window.location.origin })}>\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from 'react';\r\n\r\nconst Profile = ({ user, isLoading }) => {\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img src={user.picture} alt={user.name} />\r\n      <h2>Welcome {user.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","const HASURA_GRAPHQL_ENGINE_HOSTNAME = 'kurrip.hasura.app';\r\n\r\nconst scheme = (proto) => {\r\n  return window.location.protocol === 'https:' ? `${proto}s` : proto;\r\n};\r\n\r\nexport const GRAPHQL_URL = `${scheme(\r\n  'http'\r\n)}://${HASURA_GRAPHQL_ENGINE_HOSTNAME}/v1/graphql`;\r\n\r\nexport const REALTIME_GRAPHQL_URL = `${scheme(\r\n  'ws'\r\n)}://${HASURA_GRAPHQL_ENGINE_HOSTNAME}/v1/graphql`;\r\n\r\nexport const authClientId = '69bhm63TZadm6EjvMHwpuajeLbZPUkJx';\r\nexport const authDomain = 'kurrip.au.auth0.com';\r\nexport const callbackUrl = window.location.origin;\r\n","import logo from './assets/logo.png';\nimport logotext from './assets/logotext.png';\nimport './App.css';\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport Profile from './components/Profile';\nimport { callbackUrl } from './constants/configs';\n\nimport { useAuth0 } from '@auth0/auth0-react';\n\nfunction App() {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <img src={logotext} className=\"App-logo-text\" alt=\"logo\" />\n        {!isAuthenticated && <LoginButton />}\n        {isAuthenticated && <LogoutButton />}\n        {isAuthenticated && <Profile user={user} isLoading={isLoading} />}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport { callbackUrl, authClientId, authDomain } from './constants/configs';\n\nReactDOM.render(\n  <Auth0Provider\n    domain={authDomain}\n    clientId={authClientId}\n    redirectUri={callbackUrl}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>{' '}\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}